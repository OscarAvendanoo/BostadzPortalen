@page "/property/add"
@using BostadzPortalenClient.Models
@using BostadzPortalenWebAPI.DTO
@inject IPropertyForSaleService PropertyService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Add New Property</h3>

<EditForm Model="newProperty" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Address:</label>
        <InputText class="form-control" @bind-Value="newProperty.Address" />
    </div>

    <div class="form-group">
        <label>Municipality ID:</label>
        <InputNumber class="form-control" @bind-Value="newProperty.MunicipalityId" />
    </div>

    <div class="form-group">
        <label>Asking Price:</label>
        <InputNumber class="form-control" @bind-Value="newProperty.AskingPrice" />
    </div>

    <div class="form-group">
        <label>Living Area (sqm):</label>
        <InputNumber class="form-control" @bind-Value="newProperty.LivingArea" />
    </div>

    <div class="form-group">
        <label>Supplementary Area (sqm):</label>
        <InputNumber class="form-control" @bind-Value="newProperty.SupplementaryArea" />
    </div>

    <div class="form-group">
        <label>Plot Area (optional):</label>
        <InputNumber class="form-control" @bind-Value="newProperty.PlotArea" />
    </div>

    <div class="form-group">
        <label>Number of Rooms:</label>
        <InputNumber class="form-control" @bind-Value="newProperty.NumberOfRooms" />
    </div>

    <div class="form-group">
        <label>Description:</label>
        <InputTextArea class="form-control" @bind-Value="newProperty.Description" />
    </div>

    <div class="form-group">
        <label>Monthly Fee (optional):</label>
        <InputNumber class="form-control" @bind-Value="newProperty.MonthlyFee" />
    </div>

    <div class="form-group">
        <label>Yearly Operating Cost:</label>
        <InputNumber class="form-control" @bind-Value="newProperty.YearlyOperatingCost" />
    </div>

    <div class="form-group">
        <label>Year Built:</label>
        <InputNumber class="form-control" @bind-Value="newProperty.YearBuilt" />
    </div>

    <div class="form-group">
        <label>Type of Property:</label>
        <InputSelect class="form-control" @bind-Value="newProperty.TypeOfProperty">
            @foreach (var val in Enum.GetValues(typeof(TypeOfPropertyEnum)))
            {
                <option value="@val">@val</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label>Image URL (add multiple):</label>
        <InputText class="form-control" @bind-Value="imageUrl" />
        <button class="btn btn-secondary mt-2" type="button" @onclick="AddImageUrl">Add Image</button>
        <ul>
            @foreach (var url in newProperty.ImageUrls)
            {
                <li>@url</li>
            }
        </ul>
    </div>

    <button class="btn btn-primary mt-3" type="submit">Save</button>
</EditForm>

@if (!string.IsNullOrWhiteSpace(feedbackMessage))
{
    <div class="alert alert-info mt-3">@feedbackMessage</div>
}

@code {
    private CreatePropertyForSaleDTO newProperty = new();
    private string imageUrl = string.Empty;
    private string feedbackMessage = string.Empty;

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await PropertyService.AddPropertyForSaleAsync(newProperty);
            if (response)
            {
                feedbackMessage = "✅ Property added successfully!";
                Navigation.NavigateTo("/properties/index");
            }
            else
            {
                feedbackMessage = "❌ Failed to add property.";
            }
        }
        catch (Exception ex)
        {
            feedbackMessage = $"❌ Error: {ex.Message}";
        }
    }

    private void AddImageUrl()
    {
        if (!string.IsNullOrWhiteSpace(imageUrl))
        {
            newProperty.ImageUrls.Add(imageUrl);
            imageUrl = string.Empty;
        }
    }
}
