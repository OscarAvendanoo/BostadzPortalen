@page "/users/login"
@inject IAuthenticationService authService
@inject NavigationManager navManager

<h3>Logga in</h3>

<div class="d-flex justify-content-center align-items-center col-6">
    <div class="card w-100">
        

        <div class="card-body col-12 d-flex justify-content-center align-items-center">
            <div class="col-8 ">
                <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        <label for="email">Email Adress</label>
                        <InputText class="form-control" @bind-Value="LoginModel.Email" />
                        <ValidationMessage For="@(() => LoginModel.Email)" />
                    </div>
                    <div class="form-group">
                        <label for="email">Password</label>
                        <InputText class="form-control" type="password" @bind-Value="LoginModel.Password" />
                        <ValidationMessage For="@(() => LoginModel.Password)" />
                    </div>
                    <button type="submit" class="btn main-btn btn-block mt-3 col-12">Logga in</button>

                </EditForm>
            </div>
            
        </div>
    </div>
</div>


@code {


    LoginRealtorDto LoginModel = new LoginRealtorDto();

    public async Task HandleLogin()
    {
        string message = string.Empty;
        try
        {
            var response = await authService.AuthenticateAsync(LoginModel);
            if (response)
            {
                navManager.NavigateTo("/home");
            }
            message = "Invalid Credentials, Try again!";

        }
        catch (ApiException aex)
        {
            if (aex.StatusCode >= 200 && aex.StatusCode <= 299)
            {
                navManager.NavigateTo("/home");
            }
            message = aex.Response;
        }

    }
}
