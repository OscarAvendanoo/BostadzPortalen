@page "/users/login"
@inject IAuthenticationService authService
@inject NavigationManager navManager

<h3>Login</h3>



<div>
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Adress</label>
            <InputText class="form-control" @bind-Value="LoginModel.Email" />
            <ValidationMessage For="@(() => LoginModel.Email)" />
        </div>
        <div class="form-group">
            <label for="email">Password</label>
            <InputText class="form-control" type="password" @bind-Value="LoginModel.Password" />
            <ValidationMessage For="@(() => LoginModel.Password)" />
        </div>
        <button type="submit" class="btn main-btn btn-block mt-3">Login</button>

    </EditForm>
</div>

@code {


    LoginRealtorDto LoginModel = new LoginRealtorDto();

    public async Task HandleLogin()
    {
        string message = string.Empty;
        try
        {
            var response = await authService.AuthenticateAsync(LoginModel);
            if (response)
            {
                navManager.NavigateTo("/home");
            }
            message = "Invalid Credentials, Try again!";

        }
        catch (ApiException aex)
        {
            if (aex.StatusCode >= 200 && aex.StatusCode <= 299)
            {
                navManager.NavigateTo("/home");
            }
            message = aex.Response;
        }

    }
}
