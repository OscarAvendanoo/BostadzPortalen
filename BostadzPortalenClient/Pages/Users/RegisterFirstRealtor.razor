@page "/users/registerfirstrealtor"
@inject IClient httpClient
@inject IRealtorService RealtorService
@inject IAgencyService agencyService
@inject NavigationManager navManager

<h3>Registrera nytt konto</h3>

@if (string.IsNullOrEmpty(message) == false)
{
    <div class="alert alert-danger">
        <p>@message</p>
    </div>
}


<div>
    <div class="d-flex justify-content-center align-items-center col-6">
        <div class="card w-100">


            <div class="card-body col-12 d-flex justify-content-center align-items-center">
                <div class="col-8 ">

                    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-group">
                            <label for="email">Email</label>
                            <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
                            <ValidationMessage For="@(() => RegistrationModel.Email)" />
                        </div>
                        <div class="form-group">
                            <label for="firstname">Förnamn</label>
                            <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
                            <ValidationMessage For="@(() => RegistrationModel.FirstName)" />
                        </div>
                        <div class="form-group">
                            <label for="lastname">Efternamn</label>
                            <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
                            <ValidationMessage For="@(() => RegistrationModel.LastName)" />
                        </div>
                        <div class="form-group">
                            <label for="password">Lösenord</label>
                            <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
                            <ValidationMessage For="@(() => RegistrationModel.Password)" />
                        </div>
                        <div class="form-group">
                            <label for="AgencyId">Mäklarbyrå</label>
                            <InputSelect class="form-control" @bind-Value="RegistrationModel.AgencyId">
                                @if(Agencies == null)
                                {
                                    <p>Laddar mäklarbyråer...</p>
                                }
                                else
                                {
                                    @foreach (var agency in Agencies)
                                    {
                                        <option value="@agency.RealEstateAgencyId">@agency.AgencyName</option>
                                    }
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => RegistrationModel.AgencyId)" />
                        </div>

                        <button type="submit" class="btn main-btn btn-block mt-3">Register</button>

                    </EditForm>

                </div>
            </div>
        </div>
    </div>
</div>

@code {
    RegisterRealtorDTO RegistrationModel = new RegisterRealtorDTO();
    string message = string.Empty;
    private IEnumerable<RealEstateAgency> Agencies { get;  set; }

    protected override async Task OnInitializedAsync()
    {

        var agencies = await agencyService.GetAllAgenciesAsync();
        Agencies = agencies;

    }

    // Author: ALL
    private async Task HandleRegistration()
    {
        try
        {
            await httpClient.RegisterAsync(RegistrationModel);

            navManager.NavigateTo("/users/login");
        }
        catch (ApiException aex)
        {
            if (aex.StatusCode >= 200 && aex.StatusCode <= 299)
            {
                navManager.NavigateTo("/users/login");
            }
            message = aex.Response;

        }
    }
}