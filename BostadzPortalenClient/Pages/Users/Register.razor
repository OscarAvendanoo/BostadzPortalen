@page "/users/register"
@inject IClient httpClient
@inject IRealtorService RealtorService
@inject NavigationManager navManager
<!--Author: All-->
<h3>Skapa nytt konto</h3>

@if (string.IsNullOrEmpty(message) == false)
{
    <div class="alert alert-danger">
        <p>@message</p>
    </div>
}

<div>
    <div class="d-flex justify-content-center align-items-center col-6">
        <div class="card w-100">


            <div class="card-body col-12 d-flex justify-content-center align-items-center">
                <div class="col-8 ">
                    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-group">
                            <label for="email">E-postadress</label>
                            <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
                            <ValidationMessage For="@(() => RegistrationModel.Email)" />
                        </div>
                        <div class="form-group">
                            <label for="firstname">Förnamn</label>
                            <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
                            <ValidationMessage For="@(() => RegistrationModel.FirstName)" />
                        </div>
                        <div class="form-group">
                            <label for="lastname">Efternamn</label>
                            <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
                            <ValidationMessage For="@(() => RegistrationModel.LastName)" />
                        </div>
                        <div class="form-group">
                            <label for="password">Lösenord</label>
                            <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
                            <ValidationMessage For="@(() => RegistrationModel.Password)" />
                        </div>

                        <input type="hidden" @bind="RegistrationModel.AgencyId" />

                        <button type="submit" class="btn main-btn btn-block mt-3">Register</button>

                    </EditForm>
                </div>
            </div>

        </div>
    </div>
</div>


@code {
    RegisterRealtorDTO RegistrationModel = new RegisterRealtorDTO();
    string message = string.Empty;

    private Realtor currentUser;

    // Author: Oscar
    protected override async Task OnInitializedAsync()
    {

        var response = await RealtorService.GetCurrentRealtor();


        if (response.Success)
        {
            currentUser = response.Data;
            if (currentUser.AgencyId != null || currentUser.AgencyId != 0)
            {
                RegistrationModel.AgencyId = currentUser.AgencyId ?? 0;
            }

        }
        else
        {
            message = "Failed to load realtor information.";

        }
    }

    // Author: ALL
    private async Task HandleRegistration()
    {
        try
        {
            await httpClient.RegisterAsync(RegistrationModel);

            navManager.NavigateTo("/users/login");
        }
        catch (ApiException aex)
        {
            if (aex.StatusCode >= 200 && aex.StatusCode <= 299)
            {
                navManager.NavigateTo("/users/login");
            }
            message = aex.Response;

        }
    }
}